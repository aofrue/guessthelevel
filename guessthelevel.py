import discord,logging,random,sqlite3,os,json,asyncio
from discord.ext import commands
from discord import app_commands

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –¢–æ–∫–µ–Ω –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–¥–ø—Å–∞ (–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –î–û–ë–ê–í–¨–¢–ï –¢–û–ö–ï–ù, –ò–ù–ê–ß–ï –ù–ï –ë–£–î–ï–¢ –†–ê–ë–û–¢–ê–¢–¨!!!)
# (–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–ª—è—Ç—å —É—Ä–æ–≤–Ω–∏, —Å–æ–∑–¥–∞–π—Ç–µ –æ—Ç–¥–µ–ª—å–Ω—É—é —Ä–æ–ª—å –∏ –Ω–∞–∑–æ–≤–∏—Ç–µ —ë—ë, –∫–∞–∫ –æ–Ω–∞ –∑–∞–ø–∏—Å–∞–Ω–∞ –≤ —Å—Ç—Ä–æ—á–∫–µ)
GDPS_NAME = "GDPS"
required_role_name = "addlevel"
TOKEN = ""

# –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞ —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º –∫–æ–º–∞–Ω–¥—ã "/"
intents = discord.Intents.default()
intents.message_content = True
bot = commands.Bot(command_prefix="/", intents=intents)

# CommandTree –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å–æ —Å–ª—ç—à-–∫–æ–º–∞–Ω–¥–∞–º–∏
tree = bot.tree

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö SQLite3
DB_FILE = "leaderboard.db"
conn = sqlite3.connect(DB_FILE)
cursor = conn.cursor()

# –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –ª–∏–¥–µ—Ä–æ–≤, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
cursor.execute("""
CREATE TABLE IF NOT EXISTS leaderboard (
    user_id INTEGER PRIMARY KEY,
    username TEXT,
    points INTEGER DEFAULT 0
)
""")
conn.commit()

# –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ–± —É—Ä–æ–≤–Ω—è—Ö –∏–∑ JSON —Ñ–∞–π–ª–∞
LEVELS_FILE = "levels.json"
if not os.path.exists(LEVELS_FILE):
    with open(LEVELS_FILE, "w") as f:
        json.dump([], f)
with open(LEVELS_FILE, "r") as f:
    levels_data = json.load(f)  # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ–± —É—Ä–æ–≤–Ω—è—Ö

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–∫—É—â–∏—Ö –∏–≥—Ä
active_games = {}

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–Ω–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —É—Ä–æ–≤–Ω–µ–π
used_levels = {}  # {channel_id: {"blocked": [level_names], "counter": count}}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, —á—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –Ω–µ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö
def is_guild_channel(interaction: discord.Interaction):
    if isinstance(interaction.channel, discord.DMChannel):
        return False
    return True

# –õ–æ–≥–∏–∫–∞ –∏–≥—Ä—ã
async def guess_level_logic(interaction: discord.Interaction):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –Ω–µ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö
    if not is_guild_channel(interaction):
        await interaction.response.send_message("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö!", ephemeral=True)
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–ø—É—â–µ–Ω–∞ –ª–∏ —É–∂–µ –∏–≥—Ä–∞
    if interaction.channel.id in active_games:
        await interaction.response.send_message("–ò–≥—Ä–∞ —É–∂–µ –∑–∞–ø—É—â–µ–Ω–∞ –≤ —ç—Ç–æ–º –∫–∞–Ω–∞–ª–µ!")
        return

    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —É—Ä–æ–≤–Ω–µ–π –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –∫–∞–Ω–∞–ª–∞
    blocked_levels = used_levels.get(interaction.channel.id, {}).get("blocked", [])

    # –§–∏–ª—å—Ç—Ä—É–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ —É—Ä–æ–≤–Ω–∏, –∏—Å–∫–ª—é—á–∞—è –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ
    available_levels = [
        level for level in levels_data
        if level["name"].lower() not in blocked_levels
    ]

    if not available_levels:
        # –ï—Å–ª–∏ –≤—Å–µ —É—Ä–æ–≤–Ω–∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –±–ª–æ–∫–∏—Ä–æ–≤–∫—É
        used_levels[interaction.channel.id] = {"blocked": [], "counter": 0}
        available_levels = levels_data

    # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å
    level = random.choice(available_levels)
    level_name = level["name"]
    level_image_url = level["image_url"]

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤—ã–±—Ä–∞–Ω–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å
    active_games[interaction.channel.id] = {
        "answer": level_name.lower(),
        "last_level": level_name.lower()
    }

    # –ë–ª–æ–∫–∏—Ä—É–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å
    if interaction.channel.id not in used_levels:
        used_levels[interaction.channel.id] = {"blocked": [], "counter": 0}
    used_levels[interaction.channel.id]["blocked"].append(level_name.lower())
    used_levels[interaction.channel.id]["counter"] += 1

    # –ï—Å–ª–∏ —Å—á–µ—Ç—á–∏–∫ –¥–æ—Å—Ç–∏–≥–∞–µ—Ç 5, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –±–ª–æ–∫–∏—Ä–æ–≤–∫—É
    if used_levels[interaction.channel.id]["counter"] >= 5:
        used_levels[interaction.channel.id] = {"blocked": [], "counter": 0}

    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ–æ–Ω–æ–≤—É—é –∑–∞–¥–∞—á—É
    asyncio.create_task(game_task(interaction, level_name, level_image_url))

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∏–≥—Ä—ã
@tree.command(name="guess", description="–ó–∞–ø—É—Å—Ç–∏—Ç—å –∏–≥—Ä—É '–£–≥–∞–¥–∞–π —É—Ä–æ–≤–µ–Ω—å'")
async def guess_level(interaction: discord.Interaction):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –Ω–µ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö
    if not is_guild_channel(interaction):
        await interaction.response.send_message("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö!", ephemeral=True)
        return

    await guess_level_logic(interaction)

# –§–æ–Ω–æ–≤–∞—è –∑–∞–¥–∞—á–∞ –¥–ª—è –∏–≥—Ä—ã
async def game_task(interaction: discord.Interaction, level_name: str, level_image_url: str):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –Ω–µ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö
    if not is_guild_channel(interaction):
        return
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è
    global GDPS_NAME
    embed = discord.Embed(
        title="–£–≥–∞–¥–∞–π —É—Ä–æ–≤–µ–Ω—å",
        description=f"–£—Ä–æ–≤–µ–Ω—å –µ—Å—Ç—å –Ω–∞ {GDPS_NAME}",
        color=0x6b6b6b
        )
    embed.set_image(url=level_image_url)
    try:
        # –ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ followup
        await interaction.followup.send(embed=embed)
    except discord.errors.NotFound:
        # –ï—Å–ª–∏ followup –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –∫–∞–Ω–∞–ª
        logger.error("Followup send failed: Unknown Webhook")
        await interaction.channel.send(embed=embed)

    # –ñ–¥–µ–º –æ—Ç–≤–µ—Ç–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    def check(message):
        return message.channel == interaction.channel and message.content.lower() == level_name.lower()

    try:
        # –û–∂–∏–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ç–µ—á–µ–Ω–∏–µ 20 —Å–µ–∫—É–Ω–¥
        msg = await bot.wait_for("message", timeout=20.0, check=check)
        user = msg.author

        # –ù–∞—á–∏—Å–ª—è–µ–º –æ—á–∫–∏ –∑–∞ —É–≥–∞–¥–∞–Ω–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å
        points = 10  # –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—á–∫–æ–≤ –∑–∞ –ª—é–±–æ–π —É—Ä–æ–≤–µ–Ω—å
        cursor.execute("""
        INSERT INTO leaderboard (user_id, username, points)
        VALUES (?, ?, ?)
        ON CONFLICT(user_id) DO UPDATE SET
        points = points + excluded.points,
        username = excluded.username
        """, (user.id, user.name, points))
        conn.commit()

        # –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –æ—á–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        cursor.execute("SELECT points FROM leaderboard WHERE user_id = ?", (user.id,))
        total_points = cursor.fetchone()[0]

        try:
            # –°–æ–∑–¥–∞–µ–º embed –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± —É–≥–∞–¥—ã–≤–∞–Ω–∏–∏ —É—Ä–æ–≤–Ω—è
            embed = discord.Embed(
                title="üéâ –£—Ä–æ–≤–µ–Ω—å —É–≥–∞–¥–∞–Ω!",
                description=f"{user.mention} —É–≥–∞–¥–∞–ª —É—Ä–æ–≤–µ–Ω—å! +{points} –æ—á–∫–æ–≤.",
                color=0x00ff00  # –ó–µ–ª–µ–Ω—ã–π —Ü–≤–µ—Ç –¥–ª—è —É—Å–ø–µ—Ö–∞
            )
            embed.add_field(name="–í—Å–µ–≥–æ –æ—á–∫–æ–≤:", value=str(total_points), inline=False)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º embed —á–µ—Ä–µ–∑ followup
            await interaction.followup.send(embed=embed, view=GameEndView())
        except discord.errors.NotFound:
            # –ï—Å–ª–∏ followup –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º embed —á–µ—Ä–µ–∑ –∫–∞–Ω–∞–ª
            logger.error("Followup send failed: Unknown Webhook")
            await interaction.channel.send(embed=embed, view=GameEndView())

    except asyncio.TimeoutError:
        try:
            # –°–æ–∑–¥–∞–µ–º embed –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –≤—Ä–µ–º–µ–Ω–∏
            embed = discord.Embed(
                title="‚è∞ –í—Ä–µ–º—è –≤—ã—à–ª–æ!",
                description="–ù–∏–∫—Ç–æ –Ω–µ —É–≥–∞–¥–∞–ª —ç—Ç–æ—Ç —É—Ä–æ–≤–µ–Ω—å.",
                color=0xff0000  # –ö—Ä–∞—Å–Ω—ã–π —Ü–≤–µ—Ç –¥–ª—è –æ–±–æ–∑–Ω–∞—á–µ–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
            )
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º embed —á–µ—Ä–µ–∑ followup
            await interaction.followup.send(embed=embed, view=GameEndView())
        except discord.errors.NotFound:
            # –ï—Å–ª–∏ followup –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º embed —á–µ—Ä–µ–∑ –∫–∞–Ω–∞–ª
            logger.error("Followup send failed: Unknown Webhook")
            await interaction.channel.send(embed=embed, view=GameEndView())
    finally:
        # –û—á–∏—â–∞–µ–º –∏–≥—Ä—É
        del active_games[interaction.channel.id]

# –ö–ª–∞—Å—Å –¥–ª—è –∫–Ω–æ–ø–æ–∫ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏–≥—Ä—ã
class GameEndView(discord.ui.View):
    def __init__(self):
        super().__init__(timeout=None)

    @discord.ui.button(label="–°—ã–≥—Ä–∞—Ç—å —Å–Ω–æ–≤–∞", style=discord.ButtonStyle.blurple)
    async def play_again(self, interaction: discord.Interaction, button: discord.ui.Button):
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –Ω–µ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö
        if not is_guild_channel(interaction):
            await interaction.response.send_message("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö!", ephemeral=True)
            return

        # –ó–∞–ø—É—Å–∫–∞–µ–º –∏–≥—Ä—É —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–π —Å–ª–æ–∂–Ω–æ—Å—Ç—å—é
        await interaction.response.defer()  # –û—Ç–∫–ª–∞–¥—ã–≤–∞–µ–º –æ—Ç–≤–µ—Ç
        await guess_level_logic(interaction)
        self.stop()

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã –ª–∏–¥–µ—Ä–æ–≤
@tree.command(name="leaderboard", description="–ü–æ–∫–∞–∑–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É –ª–∏–¥–µ—Ä–æ–≤")
async def leaderboard(interaction: discord.Interaction):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –Ω–µ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö
    if not is_guild_channel(interaction):
        await interaction.response.send_message("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö!", ephemeral=True)
        return

    # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–ø-10 –∏–≥—Ä–æ–∫–æ–≤
    cursor.execute("SELECT user_id, username, points FROM leaderboard ORDER BY points DESC LIMIT 10")
    top_players = cursor.fetchall()

    # –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä–æ–∫—É –¥–ª—è —Ç–æ–ø-10
    leaderboard_text = ""
    for idx, (user_id, username, points) in enumerate(top_players, start=1):
        try:
            # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –æ–±—ä–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ user_id
            user = interaction.guild.get_member(user_id)
            if user is None:
                # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ, –ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –µ–≥–æ —á–µ—Ä–µ–∑ fetch_user
                user = await interaction.client.fetch_user(user_id)
            mention = user.mention  # –£–ø–æ–º–∏–Ω–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        except discord.errors.NotFound:
            # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π username
            mention = f"@{username}"
        except Exception as e:
            # –õ–æ–≥–∏—Ä—É–µ–º –¥—Ä—É–≥–∏–µ –æ—à–∏–±–∫–∏
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID {user_id}: {e}")
            mention = f"@{username}"

        leaderboard_text += f"#{idx} {mention}: {points} –æ—á–∫–æ–≤\n"

    # –ü–æ–ª—É—á–∞–µ–º –º–µ—Å—Ç–æ –∏ –æ—á–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    cursor.execute("SELECT points FROM leaderboard WHERE user_id = ?", (interaction.user.id,))
    user_data = cursor.fetchone()
    if user_data:
        user_points = user_data[0]
        cursor.execute("SELECT COUNT(*) + 1 FROM leaderboard WHERE points > ?", (user_points,))
        user_rank = cursor.fetchone()[0]
        user_info = f"\n–í–∞—à–µ –º–µ—Å—Ç–æ: #{user_rank}, –û—á–∫–∏: {user_points}"
    else:
        user_info = "\n–í—ã –µ—â–µ –Ω–µ –∏–≥—Ä–∞–ª–∏!"

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É –ª–∏–¥–µ—Ä–æ–≤
    embed = discord.Embed(title="–¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤", description=leaderboard_text + user_info, color=0x6b6b6b)
    await interaction.response.send_message(embed=embed)

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
@tree.command(name="addlevel", description="–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö")
@app_commands.describe(
    name="–ù–∞–∑–≤–∞–Ω–∏–µ —É—Ä–æ–≤–Ω—è",
    image_url="–°—Å—ã–ª–∫–∞ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è"
)
async def add_level(interaction: discord.Interaction, name: str, image_url: str):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –Ω–µ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö
    if not is_guild_channel(interaction):
        await interaction.response.send_message("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö!", ephemeral=True)
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ä–æ–ª—å
    global required_role_name
    has_permission = any(role.name == required_role_name for role in interaction.user.roles)
    if not has_permission:
        await interaction.response.send_message(
            f"–£ –≤–∞—Å –Ω–µ—Ç —Ä–æ–ª–∏ '{required_role_name}' –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!",
            ephemeral=True
        )
        return

    # –î–æ–±–∞–≤–ª—è–µ–º —É—Ä–æ–≤–µ–Ω—å –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    levels_data.append({
        "name": name.lower(),
        "image_url": image_url
    })
    with open(LEVELS_FILE, "w") as f:
        json.dump(levels_data, f)  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ–±—Ä–∞—Ç–Ω–æ –≤ —Ñ–∞–π–ª

    await interaction.response.send_message(f'–£—Ä–æ–≤–µ–Ω—å "{name}" —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!')

# –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞
@bot.event
async def on_ready():
    print(f"–ë–æ—Ç {bot.user} –∑–∞–ø—É—â–µ–Ω!")
    await tree.sync()  # –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º —Å–ª—ç—à-–∫–æ–º–∞–Ω–¥—ã —Å Discord
    print("–°–ª—ç—à-–∫–æ–º–∞–Ω–¥—ã —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã!")
# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.run(TOKEN)